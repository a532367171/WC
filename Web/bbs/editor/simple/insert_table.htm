<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style type="text/css">
td{
	font-size:12px;
}
input{
	border:1px inset;
	font-size:12px;
}
</style>
<script language="JavaScript">
var sAction = "INSERT";
var sTitle = "插入";
var oControl;
var oSeletion;
var sRangeType;
var sRow = "1";
var sCol = "1";
var sAlign = "";
var sBorder = "1";
var sCellPadding = "3";
var sCellSpacing = "2";
var sWidth = "";
var sBorderColor = "#CCCCCC";
var sBgColor = "#FFFFFF";
var sWidthUnit = "%"
var bCheck = true;
var bWidthDisable = false;
var sWidthValue = "100"

function oo(n){
	return document.getElementById(n);
}

var query = window.location.search.substring(1);
var parms = query.split('&');
var qsParm = new Array();
for (var i=0; i<parms.length; i++) {
	var pos = parms[i].indexOf('=');
	if (pos > 0) {
		var key = parms[i].substring(0,pos);
		var val = parms[i].substring(pos+1);
		qsParm[key] = val;
	}
}

oSelection = dialogArguments.oo("_myeditor_" + qsParm['n']).contentWindow.document.selection.createRange();
sRangeType = dialogArguments.oo("_myeditor_" + qsParm['n']).contentWindow.document.selection.type;

if (sRangeType == "Control") {
	if (oSelection.item(0).tagName == "TABLE"){
		sAction = "MODI";
		sTitle = "修改";
		oControl = oSelection.item(0);
		sRow = oControl.rows.length;
		sCol = getColCount(oControl);
		sAlign = oControl.align;
		sBorder = oControl.border;
		sCellPadding = oControl.cellPadding;
		sCellSpacing = oControl.cellSpacing;
		sWidth = oControl.width;
		sBorderColor = oControl.borderColor;
		sBgColor = oControl.bgColor;
	}
}
document.write("<TITLE>" + sTitle + "表格</TITLE>");

// 初始值
function InitDocument(){
	SearchSelectValue(oo('d_align'), sAlign.toLowerCase());

	// 修改状态时取值
	if (sAction == "MODI"){
		if (sWidth == ""){
			bCheck = false;
			bWidthDisable = true;
			sWidthValue = "100";
			sWidthUnit = "%";
		}else{
			bCheck = true;
			bWidthDisable = false;
			if (sWidth.substr(sWidth.length-1) == "%"){
				sWidthValue = sWidth.substring(0, sWidth.length-1);
				sWidthUnit = "%";
			}else{
				sWidthUnit = "";
				sWidthValue = parseInt(sWidth);
				if (isNaN(sWidthValue)) sWidthValue = "";
			}
		}
	}

	switch(sWidthUnit){
		case "%":
			d_widthunit.selectedIndex = 1;
			break;
		default:
			sWidthUnit = "";
			d_widthunit.selectedIndex = 0;
			break;
	}

	oo('d_row').value = sRow;
	oo('d_col').value = sCol;
	oo('d_border').value = sBorder;
	oo('d_cellspacing').value = sCellSpacing;
	oo('d_cellpadding').value = sCellPadding;
	oo('d_widthvalue').value = sWidthValue;
	oo('d_widthvalue').disabled = bWidthDisable;
	oo('d_widthunit').disabled = bWidthDisable;
	oo('d_bordercolor').value = sBorderColor;
	oo('s_bordercolor').style.backgroundColor = sBorderColor;
	oo('d_bgcolor').value = sBgColor;
	oo('s_bgcolor').style.backgroundColor = sBgColor;
	oo('d_check').checked = bCheck;

}

// 搜索下拉框值与指定值匹配，并选择匹配项
function SearchSelectValue(o_Select, s_Value){
	for (var i=0;i<o_Select.length;i++){
		if ( o_Select.options[i].value == s_Value){
			o_Select.selectedIndex = i;
			return true;
		}
	}
	return false;
}

// 选颜色
function SelectColor(what){
	var dEL = oo("d_"+what);
	var sEL = oo("s_"+what);
	var arr = showModalDialog("select_color.htm?color="+dEL.value.substring(1),window, "dialogWidth:200px; dialogHeight:140px; status:0; help:0");
	if (arr) {
		dEL.value=arr;
		sEL.style.backgroundColor=arr;
	}
}
// 是否有效颜色值
function IsColor(color){
	var temp=color;
	if (temp=="") return true;
	if (temp.length!=7) return false;
	return (temp.search(/\#[a-fA-F0-9]{6}/) != -1);
}
// 只允许输入数字
function IsDigit(){
	return ((event.keyCode >= 48) && (event.keyCode <= 57));
}
// 判断值是否大于0
function MoreThanOne(obj, sErr){
	var b=false;
	if (obj.value!=""){
		obj.value=parseFloat(obj.value);
		if (obj.value!="0"){
			b=true;
		}
	}
	if (b==false){
		BaseAlert(obj,sErr);
		return false;
	}
	return true;
}

// 得到表格列数
function getColCount(oTable) {
	var intCount = 0;
	if (oTable != null) {
		for(var i = 0; i < oTable.rows.length; i++){
			if (oTable.rows[i].cells.length > intCount) intCount = oTable.rows[i].cells.length;
		}
	}
	return intCount;
}

// 增加行
function InsertRows( oTable ) {
	if ( oTable ) {
		var elRow=oTable.insertRow();
		for(var i=0; i<oTable.rows[0].cells.length; i++){
			var elCell = elRow.insertCell();
			elCell.innerHTML = " ";
		}
	}
}

// 增加列
function InsertCols( oTable ) {
	if ( oTable ) {
		for(var i=0; i<oTable.rows.length; i++){
			var elCell = oTable.rows[i].insertCell();
			elCell.innerHTML = " "
		}
	}
}

// 删除行
function DeleteRows( oTable ) {
	if ( oTable )oTable.deleteRow();
}

// 删除列
function DeleteCols( oTable ) {
	if ( oTable ) {
		for(var i=0;i<oTable.rows.length;i++){
			oTable.rows[i].deleteCell();
		}
	}
}

</script>

<SCRIPT event=onclick for=Ok language=JavaScript>
// 边框颜色的有效性
sBorderColor = oo('d_bordercolor').value;
if (!IsColor(sBorderColor)){
	BaseAlert(oo('d_bordercolor'),'无效的边框颜色值！');
	return;
}
// 背景颜色的有效性
sBgColor = oo('d_bgcolor').value;
if (!IsColor(sBgColor)){
	BaseAlert(oo('d_bgcolor'),'无效的背景颜色值！');
	return;
}
// 行数的有效性
if (!MoreThanOne(d_row,'无效的行数，至少要1行！')) return;
// 列数的有效性
if (!MoreThanOne(d_col,'无效的列数，至少要1列！')) return;
// 边线粗细的有效性
if (oo('d_border').value == "") oo('d_border').value = "0";
if (oo('d_cellpadding').value == "") oo('d_cellpadding').value = "0";
if (oo('d_cellspacing').value == "") oo('d_cellspacing').value = "0";
// 去前导0
oo('d_border').value = parseFloat(oo('d_border').value);
oo('d_cellpadding').value = parseFloat(oo('d_cellpadding').value);
oo('d_cellspacing').value = parseFloat(oo('d_cellspacing').value);
// 宽度有效值性
var sWidth = "";
if (oo('d_check').checked){
	if (!MoreThanOne(d_widthvalue,'无效的表格宽度！')) return;
	sWidth = oo('d_widthvalue').value + oo('d_widthunit').value;
}

sRow = oo('d_row').value;
sCol = oo('d_col').value;
sAlign = oo('d_align').options[oo('d_align').selectedIndex].value;
sBorder = oo('d_border').value;
sCellPadding = oo('d_cellpadding').value;
sCellSpacing = oo('d_cellspacing').value;

if (sAction == "MODI") {
	// 修改行数
	var xCount = sRow - oControl.rows.length;
	if (xCount > 0)
		for (var i = 0; i < xCount; i++) InsertRows(oControl);
	else
		for (var i = 0; i > xCount; i--) DeleteRows(oControl);
	// 修改列数
	var xCount = sCol - getColCount(oControl);
	if (xCount > 0)
		for (var i = 0; i < xCount; i++) InsertCols(oControl);
	else
		for (var i = 0; i > xCount; i--) DeleteCols(oControl);
	try {
		oControl.width = sWidth;
	}
	catch(e) {}

	oControl.align = sAlign;
	oControl.border = sBorder;
	oControl.cellSpacing = sCellSpacing;
	oControl.cellPadding = sCellPadding;
	oControl.borderColor = sBorderColor;
	oControl.bgColor = sBgColor;

}else{
	var sTable = "<table align='"+sAlign+"' border='"+sBorder+"' cellpadding='"+sCellPadding+"' cellspacing='"+sCellSpacing+"' width='"+sWidth+"' bordercolor='"+sBorderColor+"' bgcolor='"+sBgColor+"'>";
	for (var i=1;i<=sRow;i++){
		sTable = sTable + "<tr>";
	for (var j=1;j<=sCol;j++){
		sTable = sTable + "<td> </td>";
	}
	sTable = sTable + "</tr>";
}
sTable = sTable + "</table>";
}

window.returnValue = sTable;
window.close();
</SCRIPT>
</head>
<body bgcolor="#EEEEEE" onLoad="InitDocument()" style="margin-top:5px;">

<table width="320" border=0 align=center cellpadding=0 cellspacing=5>
  <tr>
	<td>
		<fieldset>
		<legend>表格大小</legend>
		<table width="100%" border=0 align="center" cellpadding=5 cellspacing=0>
		  <tr>
			<td width="50%">表格行数: <input type=text id=d_row size=8 value="" ONKEYPRESS="event.returnValue=IsDigit();" maxlength=3></td>
			<td >表格列数: <input type=text id=d_col size=8 value="" ONKEYPRESS="event.returnValue=IsDigit();" maxlength=3></td>
		  </tr>
		</table>
		</fieldset>
	</td>
  </tr>
  <tr>
  <td>
<fieldset>
<legend>表格布局</legend>
<table width="100%" border=0 cellpadding=5 cellspacing=0>
<tr>
<td width="52%">对齐方式:
  <select id="d_align" style="width:72px">
  <option value=''>默认</option>
  <option value='left'>左对齐</option>
  <option value='center'>居中</option>
  <option value='right'>右对齐</option>
  </select></td>
<td>边框粗细:
  <input type=text id=d_border size=6 value="" ONKEYPRESS="event.returnValue=IsDigit();"></td>
</tr>
<tr>
<td>单元间距:
  <input type=text id=d_cellspacing size=6 value="" ONKEYPRESS="event.returnValue=IsDigit();" maxlength=3></td>
<td>单元边距:
  <input type=text id=d_cellpadding size=6 value="" ONKEYPRESS="event.returnValue=IsDigit();" maxlength=3></td>
</tr>
</table>
</fieldset>
</td>
</tr>
<tr>
<td>
<fieldset>
<legend>表格宽度</legend>
<table border=0 cellpadding=5 cellspacing=0 width='100%'>
<tr>
<td onClick="d_check.click()" noWrap valign=middle><input id="d_check" type="checkbox" onClick="d_widthvalue.disabled=(!this.checked);d_widthunit.disabled=(!this.checked);" value="1"> 指定表格的宽度</td>
<td width="50%">
  <input name="d_widthvalue" type="text" value="" size="5" ONKEYPRESS="event.returnValue=IsDigit();" maxlength="4">
<select name="d_widthunit"><option value='px'>像素</option><option value='%'>百分比</option></select>
</td>
</tr>
</table>
</fieldset>
</td>
</tr>
<tr>
<td>
<fieldset>
<legend>表格颜色</legend>
<table width="100%" border=0 cellpadding=5 cellspacing=0>
<tr>
<td width="50%">边框:<input type=text id="d_bordercolor" size=7 value="">&nbsp;<img id="s_bordercolor" border=0 src="rect.gif" style="cursor:pointer" onClick="SelectColor('bordercolor')"></td>
<td align="right">背景:<input type=text id="d_bgcolor" size=7 value="">&nbsp;<img id="s_bgcolor" border=0 src="rect.gif" style="cursor:pointer" onClick="SelectColor('bgcolor')"></td>
</tr>
</table>
</fieldset>
</td>
</tr>
<tr><td align=right>
<button id="Ok" type="submit">确定</button> &nbsp; <button onClick="window.close();">关闭</button>
</td></tr>
</table>
</body>
</html>